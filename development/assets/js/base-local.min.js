/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/Users/bazhenov/Work/dove/development/assets/js";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!******************************!*\
  !*** ./src/base-js/index.js ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _topQuiz = __webpack_require__(/*! ./top-quiz */ 1);
	
	var _topQuiz2 = _interopRequireDefault(_topQuiz);
	
	var _quiz = __webpack_require__(/*! ./quiz */ 2);
	
	var _quiz2 = _interopRequireDefault(_quiz);
	
	var _video = __webpack_require__(/*! ./video */ 3);
	
	var _video2 = _interopRequireDefault(_video);
	
	var _celebrities = __webpack_require__(/*! ./celebrities */ 4);
	
	var _celebrities2 = _interopRequireDefault(_celebrities);
	
	var _announce = __webpack_require__(/*! ./announce */ 5);
	
	var _announce2 = _interopRequireDefault(_announce);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	console.log('run');
	
	$(function () {
		_topQuiz2.default.init();
		_video2.default.init();
		_quiz2.default.init();
		_celebrities2.default.init();
		_announce2.default.init();
	});

/***/ },
/* 1 */
/*!*********************************!*\
  !*** ./src/base-js/top-quiz.js ***!
  \*********************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function App(window, document, $) {
	
		var $opener = $('.js-top-quiz-open');
		var $content = $('.js-top-content');
		var $quiz = $('.js-top-quiz');
	
		function actions() {
			$opener.on('click', function (e) {
				e.preventDefault();
	
				if ($content.is(':visible')) {
					$content.hide();
					$quiz.show();
				} else {
					$content.show();
					$quiz.hide();
				}
			});
		}
	
		function init() {
			actions();
		}
	
		return {
			init: init
		};
	}(window, document, jQuery, undefined);

/***/ },
/* 2 */
/*!*****************************!*\
  !*** ./src/base-js/quiz.js ***!
  \*****************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function App(window, document, $) {
	
		var $quizes = $('.quiz');
	
		function quiz($quiz) {
	
			//DOM
			var $document = $(document);
			var $DOMquestionNumber = $quiz.find('.js-quiz-current-quiestion-number');
			var $DOMquestionsCount = $quiz.find('.js-quiz-quiestions-count');
			var $DOMquestions = $quiz.find('.js-quiz-questions');
			var $DOMquestionsItems = $quiz.find('.js-quiz-question');
			var $DOMresults = $quiz.find('.js-quiz-results');
			var $DOMnextButton = $quiz.find('.js-quiz-next-button');
			var $DOMradios = $quiz.find('.js-quiz-radio');
	
			var quizId = $quiz.data('id');
	
			var currentQuiestionId = 0;
			var quiestionCount = $DOMquestionsItems.length;
	
			function actions() {
				$DOMnextButton.on('click', function (e) {
					e.preventDefault();
					currentQuiestionId++;
					render();
				});
	
				$DOMradios.on('change', function (e) {
					validate();
				});
			}
	
			function validate() {
				var $curentQuestion = $DOMquestionsItems.eq(currentQuiestionId);
	
				var $selectedAnswer = $curentQuestion.find('.js-quiz-radio:checked');
	
				if ($selectedAnswer.length === 0) {
					$DOMnextButton.attr('disabled', true);
					return false;
				}
	
				$DOMnextButton.attr('disabled', false);
			}
	
			function showResults() {
	
				var results = [{ id: 1, value: 0 }, { id: 2, value: 0 }, { id: 3, value: 0 }, { id: 4, value: 0 }, { id: 5, value: 0 }, { id: 6, value: 0 }, { id: 7, value: 0 }, { id: 8, value: 0 }, { id: 9, value: 0 }];
	
				var resultId = void 0;
	
				function getMotherQuizResult(results) {
	
					var sorted = results.sort(function (a, b) {
						return parseFloat(a.value) - parseFloat(b.value);
					});
	
					return sorted.reverse()[0].id; //to chose better result
				}
	
				$DOMquestionsItems.each(function (i) {
					var answer = $DOMquestionsItems.eq(i).find('.js-quiz-radio:checked').val();
					//results.push({[i]:parseInt(answer)});
					results[answer - 1].value++;
				});
	
				console.log(quizId);
	
				switch (quizId) {
					case 'mother-quiz':
						resultId = getMotherQuizResult(results);
						break;
					default:
						resultId = 1;
				}
	
				console.log(results, resultId);
	
				$DOMquestions.hide();
				$DOMresults.show().find('.js-quiz-result-' + resultId).show();
			}
	
			function backToTop() {
	
				var quizTop = $quiz.offset().top;
				var scrollTop = $document.scrollTop();
	
				if (scrollTop > quizTop) {
					$document.scrollTop(quizTop - 50);
				}
			}
	
			function render() {
				validate();
				backToTop();
	
				if (currentQuiestionId === quiestionCount) {
					showResults();
					return;
				}
	
				$DOMquestionNumber.html(currentQuiestionId + 1);
				$DOMquestionsCount.html(quiestionCount);
	
				$DOMquestionsItems.hide().eq(currentQuiestionId).show();
			}
	
			function init() {
				render();
				actions();
			}
	
			return {
				init: init
			};
		}
	
		function getAllQuizez() {
			$quizes.each(function () {
				quiz($(this)).init();
			});
		}
	
		function init() {
			getAllQuizez();
		}
	
		return {
			init: init
		};
	}(window, document, jQuery, undefined);

/***/ },
/* 3 */
/*!******************************!*\
  !*** ./src/base-js/video.js ***!
  \******************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function App(window, document, $) {
	
		var $play = $('.js-video-player-play');
	
		function actions() {
			$play.on('click', function (e) {
				e.preventDefault();
	
				var $this = $(this);
				var $parent = $(this).parent();
				var $player = $parent.find('.js-video-player-frame');
				var $placeholder = $parent.find('.js-video-player-frame');
	
				var src = $this.attr('href');
	
				$player.attr('src', src);
	
				$this.addClass('video-player__href--invisible');
				$placeholder.addClass('video-player__frame--visible');
			});
		}
	
		function init() {
			actions();
		}
	
		return {
			init: init
		};
	}(window, document, jQuery, undefined);

/***/ },
/* 4 */
/*!************************************!*\
  !*** ./src/base-js/celebrities.js ***!
  \************************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function App(window, document, $) {
	
		var $buttons = $('.js-celebrities-button');
		var $bubbles = $('.js-celebrities-bubble');
	
		var $close = $bubbles.find('.js-celebrities-close');
	
		var myClassName = 'celebrities-girl__bubble--visible';
	
		function actions() {
			$buttons.on('click', function (e) {
				e.preventDefault();
	
				var $this = $(this);
				var targetId = $this.attr('href');
	
				console.log(targetId);
	
				var $bubble = $bubbles.filter(targetId);
	
				if ($bubble.hasClass(myClassName)) {
					$bubble.removeClass(myClassName);
				} else {
					$bubbles.removeClass(myClassName);
					$bubble.addClass(myClassName);
				}
			});
	
			$close.on('click', function (e) {
				e.preventDefault();
				$bubbles.removeClass(myClassName);
			});
		}
	
		function init() {
			actions();
		}
	
		return {
			init: init
		};
	}(window, document, jQuery, undefined);

/***/ },
/* 5 */
/*!*********************************!*\
  !*** ./src/base-js/announce.js ***!
  \*********************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _jsCookie = __webpack_require__(/*! js-cookie */ 6);
	
	var _jsCookie2 = _interopRequireDefault(_jsCookie);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function App(window, document, $) {
	
		var $announce = $('#announce');
		var $close = $announce.find('.js-announce-close');
		var $timer = $('.announce-counter');
	
		var myClassName = 'announce--visible';
		var myCookieName = 'announce';
	
		function display() {
			setTimeout(showAnnounce, 1000);
		}
	
		function showAnnounce() {
			$announce.addClass(myClassName);
		}
	
		function hideAnnounce() {
			$announce.removeClass(myClassName);
		}
	
		function setCookie() {
			_jsCookie2.default.set(myCookieName, 'i-saw-it', { expires: 1 / 24 });
		}
	
		function timer() {
			var $days = $timer.find('.js-announce-counter-days');
			var $hours = $timer.find('.js-announce-counter-hours');
			var $minutes = $timer.find('.js-announce-counter-minutes');
			var $seconds = $timer.find('.js-announce-counter-seconds');
	
			var endtime = 'September 12 2016 00:00:00 GMT+0400';
			//const endtime = 'August 31 2016 13:18:39 GMT+0300';
	
	
			function declension(num, expressions) {
				var result = void 0;
				var count = num % 100;
				if (count >= 5 && count <= 20) {
					result = expressions['2'];
				} else {
					count = count % 10;
					if (count == 1) {
						result = expressions['0'];
					} else if (count >= 2 && count <= 4) {
						result = expressions['1'];
					} else {
						result = expressions['2'];
					}
				}
				return result;
			}
	
			function getTimeRemaining(endtime) {
				var t = Date.parse(endtime) - Date.parse(new Date());
				var seconds = Math.floor(t / 1000 % 60);
				var minutes = Math.floor(t / 1000 / 60 % 60);
				var hours = Math.floor(t / (1000 * 60 * 60) % 24);
				var days = Math.floor(t / (1000 * 60 * 60 * 24));
				function zero(num) {
					return num < 10 ? '0' + num : num;
				}
				return {
					'total': t,
					'days': days,
					'hours': zero(hours),
					'minutes': zero(minutes),
					'seconds': zero(seconds)
				};
			}
	
			function daysWord(days) {
				return days + ' ' + declension(days, ['день', 'дня', 'дней']);
			}
	
			function updateClock() {
				var t = getTimeRemaining(endtime);
				// console.log( 'days: ' + t.days + '<br>' +
				// 	'hours: '+ t.hours + '<br>' +
				// 	'minutes: ' + t.minutes + '<br>' +
				// 	'seconds: ' + t.seconds );
	
				if (t.total <= 0) {
					clearInterval(timeinterval);
					hideAnnounce();
				}
	
				$days.html(daysWord(t.days));
				$hours.html(t.hours);
				$minutes.html(t.minutes);
				$seconds.html(t.seconds);
			}
	
			updateClock();
			var timeinterval = setInterval(updateClock, 1000);
		}
	
		function actions() {
			$close.on('click', function (e) {
				e.preventDefault();
				hideAnnounce();
				setCookie();
			});
			$announce.on('click', function (e) {
				hideAnnounce();
				setCookie();
			});
		}
	
		function init() {
			timer();
			if (_jsCookie2.default.get(myCookieName)) {
				return false;
			}
			actions();
			display();
		}
	
		return {
			init: init
		};
	}(window, document, jQuery, undefined);

/***/ },
/* 6 */
/*!**************************************!*\
  !*** ./~/js-cookie/src/js.cookie.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * JavaScript Cookie v2.1.2
	 * https://github.com/js-cookie/js-cookie
	 *
	 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
	 * Released under the MIT license
	 */
	;(function (factory) {
		if (true) {
			!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof exports === 'object') {
			module.exports = factory();
		} else {
			var OldCookies = window.Cookies;
			var api = window.Cookies = factory();
			api.noConflict = function () {
				window.Cookies = OldCookies;
				return api;
			};
		}
	}(function () {
		function extend () {
			var i = 0;
			var result = {};
			for (; i < arguments.length; i++) {
				var attributes = arguments[ i ];
				for (var key in attributes) {
					result[key] = attributes[key];
				}
			}
			return result;
		}
	
		function init (converter) {
			function api (key, value, attributes) {
				var result;
				if (typeof document === 'undefined') {
					return;
				}
	
				// Write
	
				if (arguments.length > 1) {
					attributes = extend({
						path: '/'
					}, api.defaults, attributes);
	
					if (typeof attributes.expires === 'number') {
						var expires = new Date();
						expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
						attributes.expires = expires;
					}
	
					try {
						result = JSON.stringify(value);
						if (/^[\{\[]/.test(result)) {
							value = result;
						}
					} catch (e) {}
	
					if (!converter.write) {
						value = encodeURIComponent(String(value))
							.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
					} else {
						value = converter.write(value, key);
					}
	
					key = encodeURIComponent(String(key));
					key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
					key = key.replace(/[\(\)]/g, escape);
	
					return (document.cookie = [
						key, '=', value,
						attributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE
						attributes.path    && '; path=' + attributes.path,
						attributes.domain  && '; domain=' + attributes.domain,
						attributes.secure ? '; secure' : ''
					].join(''));
				}
	
				// Read
	
				if (!key) {
					result = {};
				}
	
				// To prevent the for loop in the first place assign an empty array
				// in case there are no cookies at all. Also prevents odd result when
				// calling "get()"
				var cookies = document.cookie ? document.cookie.split('; ') : [];
				var rdecode = /(%[0-9A-Z]{2})+/g;
				var i = 0;
	
				for (; i < cookies.length; i++) {
					var parts = cookies[i].split('=');
					var cookie = parts.slice(1).join('=');
	
					if (cookie.charAt(0) === '"') {
						cookie = cookie.slice(1, -1);
					}
	
					try {
						var name = parts[0].replace(rdecode, decodeURIComponent);
						cookie = converter.read ?
							converter.read(cookie, name) : converter(cookie, name) ||
							cookie.replace(rdecode, decodeURIComponent);
	
						if (this.json) {
							try {
								cookie = JSON.parse(cookie);
							} catch (e) {}
						}
	
						if (key === name) {
							result = cookie;
							break;
						}
	
						if (!key) {
							result[name] = cookie;
						}
					} catch (e) {}
				}
	
				return result;
			}
	
			api.set = api;
			api.get = function (key) {
				return api(key);
			};
			api.getJSON = function () {
				return api.apply({
					json: true
				}, [].slice.call(arguments));
			};
			api.defaults = {};
	
			api.remove = function (key, attributes) {
				api(key, '', extend(attributes, {
					expires: -1
				}));
			};
	
			api.withConverter = init;
	
			return api;
		}
	
		return init(function () {});
	}));


/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,